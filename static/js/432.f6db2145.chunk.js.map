{"version":3,"file":"static/js/432.f6db2145.chunk.js","mappings":"sQA0IA,UA3GqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA8CJ,EAAAA,EAAAA,WAAS,GAAvD,eAAOK,EAAP,KAAwBC,EAAxB,KAMMC,EAAe,SAAAC,GACnB,MAEIA,EADFC,OAAUC,EADZ,EACYA,KAAMC,EADlB,EACkBA,MAElB,OAAQD,GACN,IAAK,QACHR,EAASS,GACT,MACF,IAAK,WACHP,EAAYO,GAKjB,EAuBD,OACE,UAAC,KAAD,YACE,SAAC,IAAD,KACA,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAgBC,IAAI,gBAAgBC,IAAKC,KACzC,SAAC,KAAD,gCAEF,UAAC,KAAD,YACE,SAAC,KAAD,2CACA,UAAC,KAAD,CAAMC,SA/BO,SAAAP,GACnBA,EAAMQ,iBAEN,MAA4BR,EAAMC,OAAOQ,SAAjChB,EAAR,EAAQA,MAAOE,EAAf,EAAeA,SACTe,EAAO,CACXjB,MAAOA,EAAMU,MACbR,SAAUA,EAASQ,OAGrBb,GAASqB,EAAAA,EAAAA,IAASD,IAAOE,MAAK,SAAAC,GACV,4BAAdA,EAAKC,KAIkB,aAAvBD,EAAKE,MAAMC,UACbC,EAAAA,EAAAA,IAAM,gCAJNA,EAAAA,EAAAA,IAAM,oDAMT,IACDjB,EAAMC,OAAOiB,OACd,EAYO,WACE,SAAC,KAAD,CAAOC,QAAQ,aAAf,qBACA,SAAC,KAAD,WACE,SAAC,KAAD,CACEC,SAAUrB,EACVe,KAAK,QACLZ,KAAK,QACLmB,YAAY,iBACZC,QAAQ,+NACRC,GAAG,aACHC,aAAa,QACbrB,MAAOV,EACPgC,WAAS,EACTC,UAAQ,OAGZ,SAAC,KAAD,CAAOP,QAAQ,gBAAf,wBACA,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,SAAUrB,EACVe,KAAMjB,EAAkB,OAAS,WACjCK,KAAK,WACLmB,YAAY,WACZC,QAAQ,mFACRE,aAAa,mBACbrB,MAAOR,EACP+B,UAAQ,KAEV,SAAC,KAAD,CAAaC,QA/EE,WACzB7B,GAAoBD,EACrB,EA6EqDiB,KAAK,SAA/C,UACE,SAAC,KAAD,CACET,IAAKR,EAAkB+B,EAAAA,EAAYC,EAAAA,EACnCzB,IAAI,YACJ0B,MAAM,OACNC,OAAO,eAIb,UAAC,KAAD,YACE,SAAC,IAAD,CAAQC,GAAG,SAAX,qBACA,SAAC,KAAD,CAAWlB,KAAK,SAAhB,uCAKR,SAAC,KAAD,CAAgBV,IAAI,eAAeC,IAAK4B,EAAAA,KACxC,SAAC,KAAD,MAGL,C","sources":["pages/RegisterPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { register } from 'redux/auth/operation';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  Container,\n  TitleWrap,\n  Title,\n  FormContainer,\n  SubTitle,\n  Form,\n  Label,\n  Input,\n  ButtonsWrap,\n  NavBtn,\n  SubmitBtn,\n  ImageTitleLogo,\n  ContentWrapper,\n  BottomCabbages,\n  InputWrapper,\n  PasswordBtn,\n  PasswordIcon,\n} from 'pages/styled/RegisterPage.slyle';\nimport { BackgroundLayout } from 'components/BackgroundLayout/BackgroundLayout';\n\nimport LogoSrc from './../images/imgReports/title_kapusta.png';\nimport TwoCabbages from './../images/cabbage/cabagesTwo.svg';\nimport EyeOpened from './../images/eye/eye-open.svg';\nimport EyeClosed from './../images/eye/eye-blocked.svg';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isPasswordShown, setIsPasswordShown] = useState(false);\n\n  const handleShowPassword = () => {\n    setIsPasswordShown(!isPasswordShown);\n  };\n\n  const handleChange = event => {\n    const {\n      target: { name, value },\n    } = event;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const { email, password } = event.target.elements;\n    const user = {\n      email: email.value,\n      password: password.value,\n    };\n\n    dispatch(register(user)).then(data => {\n      if (data.type === 'auth/register/fulfilled') {\n        toast('Congratulations, you have successfully registered');\n        return;\n      }\n      if (data.error.message === 'Rejected')\n        toast('Error: Email already exists');\n      return;\n    });\n    event.target.reset();\n  };\n\n  return (\n    <Container>\n      <BackgroundLayout />\n      <ContentWrapper>\n        <TitleWrap>\n          <ImageTitleLogo alt=\"title kapusta\" src={LogoSrc} />\n          <Title>Smart Finance</Title>\n        </TitleWrap>\n        <FormContainer>\n          <SubTitle>Please fill the form below:</SubTitle>\n          <Form onSubmit={handleSubmit}>\n            <Label htmlFor=\"logInEmail\">Email:</Label>\n            <InputWrapper>\n              <Input\n                onChange={handleChange}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"your@email.com\"\n                pattern=\"[A-Za-zA-Яа-яЁёЄєЇї0-9._%+-]+@[A-Za-zA-Яа-яЁёЄєЇї0-9.-]+\\.[A-Za-zA-Яа-яЁёЄєЇї]{2,4}$\"\n                id=\"logInEmail\"\n                autoComplete=\"email\"\n                value={email}\n                autoFocus\n                required\n              />\n            </InputWrapper>\n            <Label htmlFor=\"logInPassword\">Password:</Label>\n            <InputWrapper>\n              <Input\n                onChange={handleChange}\n                type={isPasswordShown ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\"Password\"\n                pattern=\"[0-9A-Za-zA-Яа-яЁёЄєЇї!@#$%^&*]{8,}\"\n                autoComplete=\"current-password\"\n                value={password}\n                required\n              />\n              <PasswordBtn onClick={handleShowPassword} type=\"button\">\n                <PasswordIcon\n                  src={isPasswordShown ? EyeOpened : EyeClosed}\n                  alt=\"EyeOpened\"\n                  width=\"20px\"\n                  height=\"20px\"\n                />\n              </PasswordBtn>\n            </InputWrapper>\n            <ButtonsWrap>\n              <NavBtn to=\"/login\">Log In</NavBtn>\n              <SubmitBtn type=\"submit\">Registration</SubmitBtn>\n            </ButtonsWrap>\n          </Form>\n        </FormContainer>\n      </ContentWrapper>\n      <BottomCabbages alt=\"Two Cabbages\" src={TwoCabbages} />\n      <ToastContainer />\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["dispatch","useDispatch","useState","email","setEmail","password","setPassword","isPasswordShown","setIsPasswordShown","handleChange","event","target","name","value","alt","src","LogoSrc","onSubmit","preventDefault","elements","user","register","then","data","type","error","message","toast","reset","htmlFor","onChange","placeholder","pattern","id","autoComplete","autoFocus","required","onClick","EyeOpened","EyeClosed","width","height","to","TwoCabbages"],"sourceRoot":""}