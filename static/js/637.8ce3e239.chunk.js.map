{"version":3,"file":"static/js/637.8ce3e239.chunk.js","mappings":"2PA+HA,UA3FkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA8CC,EAAAA,EAAAA,WAAS,GAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KA0BA,OACE,UAAC,KAAD,YACE,SAAC,IAAD,KACA,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAgBC,IAAI,gBAAgBC,IAAKC,KACzC,SAAC,KAAD,gCAEF,UAAC,KAAD,YACE,SAAC,KAAD,wDACA,UAAC,KAAD,CAAiBC,KAAK,kDAAtB,WACE,SAAC,MAAD,IADF,aAIA,SAAC,KAAD,yEAGA,UAAC,KAAD,CAAMC,SArCO,SAAAC,GACnBA,EAAMC,iBACN,MAA4BD,EAAME,OAAOC,SAAjCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACTC,EAAO,CACXF,MAAOA,EAAMG,MACbF,SAAUA,EAASE,OAErBjB,GAASkB,EAAAA,EAAAA,IAAMF,IAAOG,MAAK,SAAAC,GAS1B,IACDV,EAAME,OAAOS,OACd,EAmBO,WACE,SAAC,KAAD,CAAOC,QAAQ,aAAf,qBACA,SAAC,KAAD,WACE,SAAC,KAAD,CACEC,KAAK,QACLC,KAAK,QACLC,YAAY,iBACZC,QAAQ,+NACRC,GAAG,aACHC,aAAa,QACbC,WAAS,EACTC,UAAQ,OAGZ,SAAC,KAAD,CAAOR,QAAQ,gBAAf,wBACA,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,KAAMpB,EAAkB,OAAS,WACjCqB,KAAK,WACLC,YAAY,WACZC,QAAQ,mFACRE,aAAa,mBACbE,UAAQ,KAEV,SAAC,KAAD,CAAaC,QAjEE,WACzB3B,GAAoBD,EACrB,EA+DqDoB,KAAK,SAA/C,UACE,SAAC,KAAD,CACEjB,IAAKH,EAAkB6B,EAAAA,EAAYC,EAAAA,EACnC5B,IAAI,YACJ6B,MAAM,OACNC,OAAO,eAKb,UAAC,KAAD,YACE,SAAC,KAAD,CAAWZ,KAAK,SAAhB,qBACA,SAAC,IAAD,CAAQa,GAAG,YAAX,uCAKR,SAAC,KAAD,CAAgB/B,IAAI,eAAeC,IAAK+B,EAAAA,MAG7C,C","sources":["pages/LoginPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { logIn } from 'redux/auth/operation';\nimport { FcGoogle } from 'react-icons/fc';\n\nimport {\n  Container,\n  TitleWrap,\n  Title,\n  FormContainer,\n  SubTitle,\n  Form,\n  Label,\n  Input,\n  ButtonsWrap,\n  NavBtn,\n  SubmitBtn,\n  ImageTitleLogo,\n  ContentWrapper,\n  BottomCabbages,\n  InputWrapper,\n  PasswordBtn,\n  GoogleLoginLink,\n  PasswordIcon,\n} from 'pages/styled/RegisterPage.slyle';\n\nimport { BackgroundLayout } from 'components/BackgroundLayout/BackgroundLayout';\nimport LogoSrc from './../images/imgReports/title_kapusta.png';\nimport TwoCabbages from './../images/cabbage/cabagesTwo.svg';\n\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\nimport EyeOpened from './../images/eye/eye-open.svg';\nimport EyeClosed from './../images/eye/eye-blocked.svg';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const [isPasswordShown, setIsPasswordShown] = useState(false);\n\n  const handleShowPassword = () => {\n    setIsPasswordShown(!isPasswordShown);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { email, password } = event.target.elements;\n    const user = {\n      email: email.value,\n      password: password.value,\n    };\n    dispatch(logIn(user)).then(data => {\n      // console.log(data);\n      // if (data?.error?.message === 'Rejected') {\n      //   toast('Data entered incorrectly. Try again');\n      //   return;\n      // }\n      // if (data.requestStatus === 'fulfilled') {\n      //   return;\n      // }\n    });\n    event.target.reset();\n  };\n\n  return (\n    <Container>\n      <BackgroundLayout />\n      <ContentWrapper>\n        <TitleWrap>\n          <ImageTitleLogo alt=\"title kapusta\" src={LogoSrc} />\n          <Title>Smart Finance</Title>\n        </TitleWrap>\n        <FormContainer>\n          <SubTitle>You can log in with your Google Account:</SubTitle>\n          <GoogleLoginLink href=\"https://kapusta-backend.goit.global/auth/google\">\n            <FcGoogle />\n            Google\n          </GoogleLoginLink>\n          <SubTitle>\n            Or log in using an email and password, after registering:\n          </SubTitle>\n          <Form onSubmit={handleSubmit}>\n            <Label htmlFor=\"logInEmail\">Email:</Label>\n            <InputWrapper>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"your@email.com\"\n                pattern=\"[A-Za-zA-Яа-яЁёЄєЇї0-9._%+-]+@[A-Za-zA-Яа-яЁёЄєЇї0-9.-]+\\.[A-Za-zA-Яа-яЁёЄєЇї]{2,4}$\"\n                id=\"logInEmail\"\n                autoComplete=\"email\"\n                autoFocus\n                required\n              />\n            </InputWrapper>\n            <Label htmlFor=\"logInPassword\">Password:</Label>\n            <InputWrapper>\n              <Input\n                type={isPasswordShown ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\"Password\"\n                pattern=\"[0-9A-Za-zA-Яа-яЁёЄєЇї!@#$%^&*]{8,}\"\n                autoComplete=\"current-password\"\n                required\n              />\n              <PasswordBtn onClick={handleShowPassword} type=\"button\">\n                <PasswordIcon\n                  src={isPasswordShown ? EyeOpened : EyeClosed}\n                  alt=\"EyeOpened\"\n                  width=\"20px\"\n                  height=\"20px\"\n                />\n              </PasswordBtn>\n            </InputWrapper>\n\n            <ButtonsWrap>\n              <SubmitBtn type=\"submit\">Log In</SubmitBtn>\n              <NavBtn to=\"/register\">Registration</NavBtn>\n            </ButtonsWrap>\n          </Form>\n        </FormContainer>\n      </ContentWrapper>\n      <BottomCabbages alt=\"Two Cabbages\" src={TwoCabbages} />\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"],"names":["dispatch","useDispatch","useState","isPasswordShown","setIsPasswordShown","alt","src","LogoSrc","href","onSubmit","event","preventDefault","target","elements","email","password","user","value","logIn","then","data","reset","htmlFor","type","name","placeholder","pattern","id","autoComplete","autoFocus","required","onClick","EyeOpened","EyeClosed","width","height","to","TwoCabbages"],"sourceRoot":""}